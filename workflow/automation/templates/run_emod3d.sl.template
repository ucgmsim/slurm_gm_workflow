#updating the stats in managementDB
if [[ ! -d {{mgmt_db_location}}/mgmt_db_queue ]]; then
    #create the queue folder if not exist
    mkdir {{mgmt_db_location}}/mgmt_db_queue
fi

SUCCESS_CODE=0

if [[ -d "{{sim_dir}}/LF/Restart" ]] && [[ `ls -1 {{sim_dir}}/LF/Restart | wc -l` != $SUCCESS_CODE ]]; then
    echo "Checkpointed run found, attempting to resume from checkpoint"
    sed -i 's/read_restart=.*/read_restart="1"/' {{sim_dir}}/LF/e3d.par
fi

timestamp=`date +%Y%m%d_%H%M%S`
runtime_fmt="%Y-%m-%d_%H:%M:%S"
start_time=`date +$runtime_fmt`
echo $start_time

python $gmsim/workflow/workflow/automation/execution_scripts/add_to_mgmt_queue.py {{mgmt_db_location}}/mgmt_db_queue {{srf_name}} EMOD3D running $SLURM_JOB_ID  --start_time "$start_time" --nodes $SLURM_NNODES --cores $SLURM_NTASKS --wct "$wct"
{{submit_command}}

end_time=`date +$runtime_fmt`
echo $end_time

#run test script and update mgmt_db
#test before update
ln -sf {{sim_dir}}/LF/e3d.par {{sim_dir}}/LF/OutBin/e3d.par
timestamp=`date +%Y%m%d_%H%M%S`
res=`$gmsim/workflow/workflow/calculation/verification/test_emod3d.sh {{sim_dir}} {{srf_name}}`
success=$?
if [[ $success == $SUCCESS_CODE ]]; then
    sleep 2
    res=`$gmsim/workflow/workflow/calculation/verification/test_emod3d.sh {{sim_dir}} {{srf_name}}`
    success=$?
fi
if [[ $success == $SUCCESS_CODE ]]; then
    #passed
    python $gmsim/workflow/workflow/automation/execution_scripts/add_to_mgmt_queue.py {{mgmt_db_location}}/mgmt_db_queue {{srf_name}} EMOD3D completed $SLURM_JOB_ID --end_time "$end_time"
    rm {{sim_dir}}/LF/Restart/*

    if [[ ! -d {{sim_dir}}/ch_log ]]; then
        mkdir {{sim_dir}}/ch_log
    fi

    #save meta data
    python $gmsim/workflow/workflow/automation/metadata/log_metadata.py {{sim_dir}} EMOD3D cores=$SLURM_NTASKS start_time=$start_time end_time=$end_time status="COMPLETED"
else
    #reformat $res to remove '\n'
    res=`echo $res | tr -d '\n'`
    python $gmsim/workflow/workflow/automation/execution_scripts/add_to_mgmt_queue.py {{mgmt_db_location}}/mgmt_db_queue {{srf_name}} EMOD3D failed $SLURM_JOB_ID --error "$res" --end_time "$end_time"
    backup_directory="$nobackup/tmp/$USER/""$SLURM_JOB_ID""_{{srf_name}}_LF"
    echo "Completion test failed, moving all files to $backup_directory"
    echo "Failure reason: $res"
    mkdir -p $backup_directory
    mv {{sim_dir}}/LF $backup_directory
    mkdir -p {{sim_dir}}/LF # create LF directory
    cp $backup_directory/e3d.par {{sim_dir}}/LF # bring back e3d.par

fi
