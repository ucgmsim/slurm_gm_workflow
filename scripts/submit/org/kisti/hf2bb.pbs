#!/bin/bash
# script version: slurm
#
# must be run with qsub -v REL_LOC=[realization_directory],MGMT_DB_LOC=[management_DB_location],REM_ARGS=[remaining_extra_args] hf2bb.sl

#PBS -N hf2bb
#PBS -V
#PBS -q normal
#PBS -A inhouse
#PBS -l select=1:ncpus=36
#PBS -l walltime=00:15:00

export SLURM_JOB_ID="${PBS_JOBID/.pbs/}"

#check for required arguments/variables, exit if not set
echo REL_LOC:${REL_LOC:?REL_LOC not set}
echo MGMT_DB_LOC:${MGMT_DB_LOC:?MGMT_DB_LOC not set}
echo REM_ARGS:${REM_ARGS:?REM_ARGS not set}

REL_NAME=`basename $REL_LOC`

HF_LOC=$REL_LOC/HF/Acc/HF.bin
BB_LOC=$REL_LOC/BB/Acc/BB.bin

if [[ ! -d $REL_LOC/BB/Acc ]]; then
    mkdir -p $REL_LOC/BB/Acc
fi

#code block for saving job's MetaData
JOB_LOG_DIR=$REL_LOC/ch_log
mkdir -p ${JOB_LOG_DIR}
query_cmd="qstat -f -F json -x ${PBS_JOBID} >> ${JOB_LOG_DIR}/${PBS_JOBID}.json"
eval " ${query_cmd}"

#updating the stats in managementDB
if [[ ! -d $MGMT_DB_LOC/mgmt_db_queue ]]; then
    #create the queue folder if not exist
    mkdir $MGMT_DB_LOC/mgmt_db_queue
fi
timestamp=`date +%Y%m%d_%H%M%S`
python $gmsim/workflow/scripts/cybershake/add_to_mgmt_queue.py $MGMT_DB_LOC/mgmt_db_queue $REL_NAME HF2BB running $SLURM_JOB_ID

runtime_fmt="%Y-%m-%d_%H:%M:%S"
start_time=`date +$runtime_fmt`
echo $start_time

echo "python $gmsim/workflow/scripts/hf2bb.py $HF_LOC $BB_LOC"
python $gmsim/workflow/scripts/hf2bb.py $HF_LOC $BB_LOC $REM_ARGS

end_time=`date +$runtime_fmt`
echo $end_time

timestamp=`date +%Y%m%d_%H%M%S`
#test before update
res=`$gmsim/workflow/scripts/test_bb.sh $REL_LOC `
if [[ $? == 0 ]]; then
    #passed
    python $gmsim/workflow/scripts/cybershake/add_to_mgmt_queue.py $MGMT_DB_LOC/mgmt_db_queue $REL_NAME HF2BB completed $SLURM_JOB_ID

    if [[ ! -d $REL_LOC/ch_log ]]; then
        mkdir $REL_LOC/ch_log
    fi
    fd_name=`python -c "from qcore import utils; pb = utils.load_sim_params('$REL_LOC/sim_params.yaml'); print(pb['FD_STATLIST'])"`
    fd_count=`cat $fd_name | wc -l`
    
    # save meta data
    python $gmsim/workflow/metadata/log_metadata.py $REL_LOC HF2BB cores=$PBS_TASKNUM fd_count=$fd_count start_time=$start_time end_time=$end_time
else
    #reformat $res to remove '\n'
    res=`echo $res | tr -d '\n'`
    python $gmsim/workflow/scripts/cybershake/add_to_mgmt_queue.py $MGMT_DB_LOC/mgmt_db_queue $REL_NAME HF2BB failed $SLURM_JOB_ID --error "$res"
fi
